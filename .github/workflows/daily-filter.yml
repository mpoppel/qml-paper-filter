name: Quantum ML Paper Filter

on:
  # Run daily at 9 AM UTC (adjust timezone as needed)
  schedule:
    - cron: '0 9 * * *'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      days_back:
        description: 'Number of days to look back'
        required: false
        default: '1'
        type: string

jobs:
  filter-papers:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set environment variables
      run: |
        echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        echo "EMAIL_ENABLED=${{ secrets.EMAIL_USERNAME != '' && secrets.EMAIL_PASSWORD != '' && secrets.EMAIL_TO != '' }}" >> $GITHUB_ENV
        echo "SLACK_ENABLED=${{ secrets.SLACK_WEBHOOK_URL != '' }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run paper filter
      id: filter
      run: |
        cd src
        python qml_filter.py --days-back ${{ github.event.inputs.days_back || '1' }} --output-format both
      env:
        PYTHONPATH: ${{ github.workspace }}/src

    - name: Upload digest artifact
      uses: actions/upload-artifact@v4
      with:
        name: qml-digest-${{ env.DATE }}
        path: |
          src/output/
        retention-days: 90

    - name: Send email notification
      if: env.EMAIL_ENABLED == 'true' && steps.filter.outputs.relevant_papers > 0
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "ðŸ”¬ Quantum ML Digest - ${{ env.DATE }}"
        to: ${{ secrets.EMAIL_TO }}
        from: QML Paper Filter <${{ secrets.EMAIL_USERNAME }}>
        html_body: file://src/output/digest_email.html
        attachments: src/output/digest_${{ env.DATE }}.txt

    - name: Send Slack notification
      if: env.SLACK_ENABLED == 'true' && steps.filter.outputs.relevant_papers > 0
      uses: 8398a7/action-slack@v3
      with:
        status: success
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: |
          ðŸ”¬ *Quantum ML Daily Digest*
          Found ${{ steps.filter.outputs.relevant_papers }} relevant papers
          
          Top paper: ${{ steps.filter.outputs.top_paper }}
          
          <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View full digest>

    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `QML Paper Filter Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `The quantum ML paper filter failed to run successfully.
            
            **Run Details:**
            - Workflow: ${context.workflow}
            - Run ID: ${context.runId}
            - Trigger: ${context.eventName}
            
            **Error Details:**
            Check the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.
            
            This issue will be automatically closed when the next successful run completes.`,
            labels: ['bug', 'automated']
          })

    - name: Close previous failure issues
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'automated',
            state: 'open'
          });
          
          for (const issue of issues.data) {
            if (issue.title.includes('QML Paper Filter Failed')) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }
          }

  # Optional: Weekly summary job
  weekly-summary:
    runs-on: ubuntu-latest
    # Uncomment to enable weekly summaries every Sunday at 10 AM UTC
    # if: github.event.schedule == '0 10 * * 0'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Generate weekly summary
      run: |
        cd src
        python qml_filter.py --days-back 7 --weekly-summary
      env:
        PYTHONPATH: ${{ github.workspace }}/src

    - name: Upload weekly summary
      uses: actions/upload-artifact@v4
      with:
        name: qml-weekly-summary-${{ env.WEEK }}
        path: src/output/weekly_summary_*.txt
        retention-days: 365  # Keep weekly summaries longer

    - name: Set week variable
      run: echo "WEEK=$(date +'%Y-W%U')" >> $GITHUB_ENV